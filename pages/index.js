import { isTSTypeAliasDeclaration } from "eslint-plugin-react/lib/util/ast"
import Head from "next/head"
import { useCallback } from "react"
import { useContext } from "../components/ContextProvider"
import Link from "../components/Link"
import styles from "../styles/Home.module.css"

export const ToDoListItems = (props) => {
  const { list } = props

  return (
    <div>
      {list.map((v) => (
        <ToDoItem key={v.id} task={v}>
          {" "}
        </ToDoItem>
      ))}
    </div>
  )
}

export const CategoryList = (props) => {
  const { currentCategory, state, setCurrentCategory } = useContext()
  const handleClick = useCallback(
    (event) => {
      const categoryId = Number.parseInt(
        event.currentTarget.getAttribute("data-category-index"),
        10
      )

      setCurrentCategory(categoryId)
    },
    [setCurrentCategory]
  )

  return (
    <div className="flex gap-3 p-5">
      {state.map((state, index) => (
        <div
          onClick={handleClick}
          key={index}
          data-category-index={index}
          className={index === currentCategory ? "border-red" : "border"}
        >
          <h3>
            {" "}
            {state.name} is {currentCategory}
          </h3>
          <div>
            <span>
              {
                state.todo_tasks.filter(({ completed }) => Boolean(completed))
                  .length
              }{" "}
              / {state.todo_tasks.length}
            </span>
          </div>
        </div>
      ))}
    </div>
  )
}

export const ToDoItem = (props) => {
  const { task } = props
  const { currentCategory, deleteTask, updateTask } = useContext()

  const handleClickCompleteTask = () => {
    const updatedTask = {
      id: task.id,
      content: task.content,
      completed: !task.completed,
    }
    updateTask(updatedTask, currentCategory)
  }

  const handleClickTaskDeletion = useCallback(
    (event) => {
      const taskId = Number.parseInt(
        event.currentTarget.getAttribute("data-task-id"),
        10
      )

      deleteTask(taskId, currentCategory)
    },
    [deleteTask, currentCategory]
  )
  const category = { id: 0 }

  return (
    <div className="flex w-50 align-center justify-start gap-5 p-5 border">
      <input
        onClick={handleClickCompleteTask}
        type="checkbox"
        defaultChecked={task.completed}
      />
      <h1>{task.content}</h1>
      <Link href={`/category/{${category.id}/tasks/${task.id}/edit`}>Edit</Link>
      <button onClick={handleClickTaskDeletion} data-task-id={task.id}>
        {" "}
        Delete this task!
      </button>
    </div>
  )
}

export default function Home() {
  const { state, currentCategory } = useContext()

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CategoryList></CategoryList>
      <ToDoListItems list={state[currentCategory].todo_tasks}></ToDoListItems>
    </div>
  )
}
